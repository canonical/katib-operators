# reusable workflow triggered by other actions
name: CI

on:
  workflow_call:
    secrets:
      CHARMCRAFT_CREDENTIALS:
        required: true

jobs:
  lib-check:
    name: Check libraries
    strategy:
      matrix:
        charm:
        - katib-controller
        - katib-db-manager
        - katib-ui
    uses: canonical/charmed-kubeflow-workflows/.github/workflows/_quality-checks.yaml@main
    secrets: inherit
    with:
        charm-path: ./charms/${{ matrix.charm }}

  lint:
    name: Lint
    runs-on: ubuntu-20.04

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        set -eux
        sudo apt update
        sudo apt install python3-setuptools
        sudo pip3 install black flake8

    - name: Check black
      run: black --check charms/*/src

    - name: Check flake8
      run: flake8 ./charms/*/src

  unit:
    name: Unit tests
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        charm:
          - katib-db-manager
    steps:
      - uses: actions/checkout@v3
      - run: python3 -m pip install tox
      - run: tox -e ${{ matrix.charm }}-unit
  
  charm-integration:
    name: Integration tests (microk8s)
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        charm:
          - katib-controller
    steps:
      - uses: actions/checkout@v3
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: 1.25-strict/stable
          juju-channel: 3.1/stable
          charmcraft-channel: latest/candidate

      - run: |
          sg snap_microk8s -c "tox -e ${{ matrix.charm }}-integration"

      # Collect debug logs if failed
      - name: Dump Juju/k8s logs on failure
        uses: canonical/kubeflow-ci/actions/dump-charm-debug-artifacts@main
        if: always()
        with:
          app: ${{ matrix.charm }}
          model: testing

  test-bundle:
    name: Test the bundle
    runs-on: ubuntu-20.04

    steps:
    # Ideally we'd use self-hosted runners, but this effort is still not stable.
    # This action will remove unused software (dotnet, haskell, android libs, codeql,
    # and docker images) from the GH runner, which will liberate around 60 GB of storage
    # distributed in 40GB for root and around 20 for a mnt point.
      - name: Maximise GH runner space
        uses: easimon/maximize-build-space@v7
        with:
          root-reserve-mb: 40960
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-android: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Check out code
        uses: actions/checkout@v3
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: 1.25-strict/stable
          juju-channel: 3.1/stable
          microk8s-addons: "dns storage rbac"

      - name: Run test
        run: |
          # Requires the model to be called kubeflow due to kfp-viewer
          juju add-model kubeflow --config default-series=focal
          sg snap_microk8s -c "tox -e bundle-integration -- --model kubeflow"

      - name: Get pod statuses
        run: kubectl get all -A
        if: failure()

      - name: Get juju status
        run: juju status
        if: failure()

      - name: Get katib-controller workload logs
        run: kubectl logs --tail 100 -nkubeflow -lapp.kubernetes.io/name=katib-controller
        if: failure()

      - name: Get katib-controller operator logs
        run: kubectl logs --tail 100 -nkubeflow -loperator.juju.is/name=katib-controller
        if: failure()

      - name: Get katib-ui workload logs
        run: kubectl logs --tail 100 -nkubeflow -lapp.kubernetes.io/name=katib-ui
        if: failure()

      - name: Get katib-ui operator logs
        run: kubectl logs --tail 100 -nkubeflow -loperator.juju.is/name=katib-ui
        if: failure()

      - name: Get katib-db-manager workload logs
        run: kubectl logs --tail 100 -nkubeflow -lapp.kubernetes.io/name=katib-db-manager
        if: failure()

      - name: Get katib-db-manager operator logs
        run: kubectl logs --tail 100 -nkubeflow -loperator.juju.is/name=katib-db-manager
        if: failure()

      - name: Upload charmcraft logs
        uses: actions/upload-artifact@v3
        with:
          name: charmcraft-logs
          path: /tmp/charmcraft-log-*
        if: failure()
