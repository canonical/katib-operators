# reusable workflow triggered by other actions
name: Continuous Integration

on:
  workflow_call:
    secrets:
      charmcraft-credentials:
        required: true

jobs:

  lib-check:
    name: Check libraries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        charm:
        - katib-controller
        - katib-db-manager
        - katib-ui
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Check libs
      uses: canonical/charming-actions/check-libraries@2.0.0-rc
      with:
        charm-path: ./charms/${{ matrix.charm }}
        credentials: "${{ secrets.charmcraft-credentials }}"
        github-token: "${{ secrets.GITHUB_TOKEN }}"

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        set -eux
        sudo apt update
        sudo apt install python3-setuptools
        sudo pip3 install black flake8

    - name: Check black
      run: black --check charms/*/src

    - name: Check flake8
      run: flake8 ./charms/*/src

  build:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Check out repo
      uses: actions/checkout@v2

    - name: Setup operator environment
      uses: charmed-kubernetes/actions-operator@main
      with:
        provider: microk8s
        channel: 1.22/stable
        charmcraft-channel: latest/candidate

    - name: Install dependencies
      run: |
        set -eux
        sudo apt update
        sudo apt install -y python3-pip
        sudo snap install juju --classic
        sudo snap install juju-bundle --classic
        sudo snap install juju-wait --classic
        sudo pip3 install charmcraft==1.3.1

    - name: Deploy Katib
      env:
        CHARMCRAFT_DEVELOPER: "1"
      run: |
        set -eux
        git clone git://git.launchpad.net/canonical-osm
        cp -r canonical-osm/charms/interfaces/juju-relation-mysql mysql
        sg microk8s -c 'juju bootstrap microk8s uk8s'
        juju add-model kubeflow
        # Katib requires the namespace to have certain labels for metrics collection
        sg microk8s -c 'kubectl label namespace default katib.kubeflow.org/metrics-collector-injection=enabled'
        juju bundle deploy --build --destructive-mode --serial
        juju wait -wvt 600

    - name: Test Katib
      run: kubectl apply -f examples/v1beta1/hp-tuning/random.yaml

    - name: Get pod statuses
      run: kubectl get all -A
      if: failure()

    - name: Get juju status
      run: juju status
      if: failure()

    - name: Get katib-controller workload logs
      run: kubectl logs --tail 100 -nkubeflow -lapp.kubernetes.io/name=katib-controller
      if: failure()

    - name: Get katib-controller operator logs
      run: kubectl logs --tail 100 -nkubeflow -loperator.juju.is/name=katib-controller
      if: failure()

    - name: Get katib-ui workload logs
      run: kubectl logs --tail 100 -nkubeflow -lapp.kubernetes.io/name=katib-ui
      if: failure()

    - name: Get katib-ui operator logs
      run: kubectl logs --tail 100 -nkubeflow -loperator.juju.is/name=katib-ui
      if: failure()

    - name: Get katib-db-manager workload logs
      run: kubectl logs --tail 100 -nkubeflow -lapp.kubernetes.io/name=katib-db-manager
      if: failure()

    - name: Get katib-db-manager operator logs
      run: kubectl logs --tail 100 -nkubeflow -loperator.juju.is/name=katib-db-manager
      if: failure()

    - name: Upload charmcraft logs
      uses: actions/upload-artifact@v2
      with:
        name: charmcraft-logs
        path: /tmp/charmcraft-log-*
      if: failure()
